{{template "header"}}
<div class="container">
    <div class="row">
        <div class="col-sm-6 col-md-4 col-md-offset-4">
            <h1 class="text-center login-title">Sign in to go.demo.iam</h1>
            <div class="account-wall">
                <img id="none" class="profile-img" src="https://lh5.googleusercontent.com/-b0-k99FZlyE/AAAAAAAAAAI/AAAAAAAAAAA/eu7opA4byxI/photo.jpg?sz=120"
                     alt="">
                <form class="form-signin" id="LoginForm">
                    <input type="hidden" name="sess" value="{{.sessid}}">
                    <input type="text" name="eml" id="FieldEmail" class="form-control" placeholder="Email" required autofocus>
                    <input type="password" name="pwd" id="FieldPassword" class="form-control" placeholder="Password" required>
                    <button class="btn btn-lg btn-primary btn-block" type="submit">
                        Sign in</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var $form = $('#LoginForm');
    var $eml  = $('#FieldEmail');
    var $pwd  = $('#FieldPassword');
    var $none = $('#none');

    $(document).ready(function () {

        $form.on('submit', function (evt) {

            $('div.qtip:visible').qtip('hide');

            evt.preventDefault();
            var data = $form.serialize();

            $.ajax({
                type: "POST",
                cache: false,
                url: "/gui/check",
                data: data,
                success: formSubmitSuccess,
                error: formSubmitError,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                dataType: "json"
            });
        })
    });

    function formSubmitSuccess(sdata, status, xhr) {

        console.log(sdata);
        console.log(status);
        console.log(xhr);

        var json = xhr.responseJSON;
        if(typeof(json) === "object" && json.error === false) {

            window.location.replace(json.redirect);
        }
    }

    function formSubmitError(xhr, status, error) {

        var json = xhr.responseJSON;
        if(typeof(json) === "object" && json.error === true) {

            for(var fld in json.error_messages) {

                var obj = json.error_messages[fld];
                switch (obj.field) {
                    case 'eml':
                        $eml.qtip({
                            content: {
                                text: obj.message
                            },
                            position: {
                                my: "center left",
                                at: "center right"
                            },
                            show: {
                                ready: true
                            },
                            hide: {
                                fixed: true
                            },
                            style: {
                                classes: "qtip-red"
                            }
                        });
                        break;

                    case 'pwd':
                        $pwd.qtip({
                            content: {
                                text: obj.message
                            },
                            position: {
                                my: "center left",
                                at: "center right"
                            },
                            show: {
                                ready: true
                            },
                            hide: {
                                fixed: true
                            },
                            style: {
                                classes: "qtip-red"
                            }
                        });
                        break;

                    case 'none':
                        $none.qtip({
                            content: {
                                text: obj.message
                            },
                            position: {
                                my: "center left",
                                at: "center right"
                            },
                            show: {
                                ready: true
                            },
                            hide: {
                                fixed: true
                            },
                            style: {
                                classes: "qtip-red"
                            }
                        });
                        break;
                }
            }
        }
    }

</script>

{{template "footer"}}